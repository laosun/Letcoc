<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');/** * L_DataBase extends Letcoc Class. *  * PHP Version 5.3.9 *  * @name		Letcoc DataBase Class. * @package		Letcoc. * @author		Aleksei Zhulitov. * @title		Класс расширения Letcoc, для Базы Данных CodeIgniter. */class L_DataBase extends Letcoc {		/**#@+	 * Class Variables	 * @access private|protected|public	 */		/** Свойство для хранения CI DB */	private $_MySQL						= NULL;		/** Свойство для хранения CI parser */	private $_PARSER					= NULL;		/** Текущий SQL запрос. */	private	$_curSQL					= NULL;	/**#@-*/		/**	 * КОНСТРУКТОР.	 *	 * @access	public	 * @return	void	 */	public function __construct()	{		parent::__construct();				/** Подгружаем DB.  */		$this->CI->load->database();		$this->_MySQL		=& $this->CI->db;				/** Подгружаем Парсер. */		$this->CI->load->library( "parser" );		$this->_PARSER		=& $this->CI->parser;	}			/**	 * Метод возвращает наполненный SQL запрос по его имени.	 * (наполнение может происходить из __REQUEST или из переданного массива `$array` )	 * 	 * @access	public	 * @param	string	$name	[имя SQL запроса]	 * @param	array	$array	[массив для наполнения (опционально)]	 * @return	object			[ссылка на этот класс]	 */	public function SQL( $name = FALSE, $array = FALSE )	{		$this->_curSQL	= NULL;		if ( !is_string( $name ) )			return $this;					$SQL	= $this->_fill_SQL( $array );				if ( !isset( $SQL[$name] ) )			return $this;				$this->_curSQL	= $SQL[ $name ];		return	$this;	}			/**	 * Метод выполняет заданный SQL запрос.	 * ( Запрос может быть передан в виде аргумента 	 * 	 или установлен через метод `SQL( "имя запроса" )` .)	 * 	 * @example	[передача запроса аргументом]	 *	<pre>	 *		$this->Letcoc->DB()->query( "SELECT * FROM `table` WHERE `name` = 'some';" );	 *	</pre>	 * 	 * @example	[установка запроса]	 *	<pre>	 *		// Список SQL запросов должен быть объявлен или загружен	 *		// в параметр `SQL` активного конструктора как массив с ключами.	 *		class Some extends CI_Controller {	 *			public $SQL = array(	 *				"select_table" => "SELECT * FROM `table` WHERE `name` = 'some';"	 *			);	 *	 *			public function index() {	 *				$this->Letcoc->DB()->SQL( "select_table" )->query();	 *			}	 *		}	 * 	</pre>	 * 	 * @access	public	 * @param	string|void	$SQL	[string - строка SQL запроса; void - ничего]	 * @return	object				[класс CodeIgniter для работы с DB]	 */	public function query( $SQL = NULL )	{		if ( !is_string( $SQL ) or strlen( $SQL ) < 5 )		{			if (					!is_string( $this->_curSQL )				or	strlen( $this->_curSQL ) < 5			){				return $this->_MySQL;			}			else			{				$SQL	= $this->_curSQL;			}		}		return $this->_MySQL->query( $SQL );	}				/** 	 * Метод парсит каждый элемент в массиве свойства класса $this->SQL	 * и подставляет значения из $this->__REQUEST или из переданного массива;	 * 	 * @access	private	 * @param	array	$array	[массив со значениями для подстановки]	 * @param	bool	$merge	[true = слить 2 массива (array и __REQUEST) ]	 * @return	array	 */	private function _fill_SQL( $array = FALSE, $merge	= FALSE )	{		if( !isset( $this->SQL ) or !is_array( $this->SQL ) )			return array();				$SQL				= array();		$__REQUEST			= array(			"__pref__"		=> $this->_MySQL->dbprefix		);				if ( $merge === TRUE AND is_array( $array ) )		{			$array			= array_merge( $array, $this->__REQUEST );		}		else		{			$array				= is_array( $array )	? $array : $this->__REQUEST;		}				/* Экранируем ввод. */		foreach ( $array as $KEY => $VALUE )		{			if ( is_string( $VALUE ) )			{				$__REQUEST[ $KEY ]	= $this->_MySQL->escape( $VALUE );			}			else			{				$__REQUEST[ $KEY ]	= $this->_MySQL->escape( (string)-1 );			}		}				foreach( $this->SQL as $KEY => $VALUE )		{			$SQL[ $KEY ]	= $this->_PARSER->parse_string( (string)$VALUE, $__REQUEST, TRUE );			$SQL[ $KEY ]	= preg_replace( "/\{\/?(\w*?)\}/", "''", $SQL[ $KEY ] );		}		return (array)$SQL;	}}/* End of file L_DataBase.php *//* Location: ./application/libraries/Letcoc_extends/L_DataBase.php */